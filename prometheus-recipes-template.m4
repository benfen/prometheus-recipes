#!/bin/bash

# m4_ignore(
echo "This is just a script template, not the script (yet) - pass it to 'argbash' to fix this." >&2
exit 11  #)Created by argbash-init v2.8.0
# ARG_OPTIONAL_BOOLEAN([delete], [], [Deletes all the kubernetes resources generated by a normal run], [off])
# ARG_OPTIONAL_BOOLEAN([deploy-alertmanager], [a], [Deploy the alertmanager as part of Prometheus], [on])
# ARG_OPTIONAL_BOOLEAN([deploy-grafana], [g], [Deploy a pre-configured Grafana dashboard as part of Prometheus], [on])
# ARG_OPTIONAL_BOOLEAN([deploy-kube-state-metrics], [k], [Deploy the kube-state-metrics as part of Prometheus], [on])
# ARG_OPTIONAL_BOOLEAN([deploy-node-exporter], [n], [Deploy the node-exporter for node level metrics], [on])
# ARG_POSITIONAL_SINGLE([namespaces],[List of comma-separated namespaces for prometheus to listen to.  By default, the default, kube-system, and monitoring namespaces are all monitored.],[""])
# ARG_DEFAULTS_POS
# ARG_HELP([Initializes a prometheus agent within a kubernetes cluster])
# ARGBASH_GO

# [ <-- needed because of Argbash

printf "'%s' is %s\\n" 'delete' "$_arg_delete"
printf "'%s' is %s\\n" 'deploy-alertmanager' "$_arg_deploy_alertmanager"
printf "'%s' is %s\\n" 'deploy-grafana' "$_arg_deploy_grafana"
printf "'%s' is %s\\n" 'deploy-kube-state-metrics' "$_arg_deploy_kube_state_metrics"
printf "'%s' is %s\\n" 'deploy-node-exporter' "$_arg_deploy_node_exporter"
printf "Value of '%s': %s\\n" 'namespaces' "$_arg_namespaces"

# ] <-- needed because of Argbash

export namespaces=$_arg_namespaces
export delete=$_arg_delete
export deploy_alertmanager=$_arg_deploy_alertmanager
export deploy_grafana=$_arg_deploy_grafana
export deploy_kube_state_metrics=$_arg_deploy_kube_state_metrics
export deploy_node_exporter=$_arg_deploy_node_exporter

(
    cd $(dirname $0)
    ./prometheus.sh
)
